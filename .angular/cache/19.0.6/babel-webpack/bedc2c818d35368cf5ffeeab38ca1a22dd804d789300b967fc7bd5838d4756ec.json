{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/vanya/WebstormProjects/V-Design2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport firebase from 'firebase/compat/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/fire/compat/firestore\";\nconst baseUrl = 'https://v-design-5.firebaseio.com';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(afAuth, router, toastr, http, db) {\n      this.afAuth = afAuth;\n      this.router = router;\n      this.toastr = toastr;\n      this.http = http;\n      this.db = db;\n      this.isAdmin = false;\n      this.adminEmail = 'vanyad@gmail.com';\n      this.afAuth.authState.subscribe(user => {\n        if (user) {\n          this.user = user;\n          localStorage.setItem('user', JSON.stringify(this.user));\n        } else {\n          localStorage.setItem('user', null);\n        }\n      });\n      this.usersCollection = db.collection('users').ref;\n    }\n    getCollection() {\n      return this.usersCollection.get();\n    }\n    login(email, password) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this.afAuth.signInWithEmailAndPassword(email, password).then(data => {\n            if (!data.user.emailVerified) {\n              _this.toastr.error('Please, verify your email!');\n              _this.afAuth.signOut();\n            } else {\n              _this.isAdmin = email === _this.adminEmail;\n              _this.router.navigate(['projects-portfolio']);\n              _this.toastr.success('Successfully logged in!');\n            }\n          });\n        } catch (error) {\n          _this.toastr.error(error.message);\n        }\n      })();\n    }\n    register(email, password) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2.afAuth.createUserWithEmailAndPassword(email, password).then(data => data.user.sendEmailVerification());\n          _this2.toastr.info('Email verification link was sent to your email address');\n          yield _this2.afAuth.signOut();\n          yield _this2.router.navigate(['projects-portfolio']);\n        } catch (error) {\n          console.log(error.message);\n          _this2.toastr.error('Error');\n        }\n      })();\n    }\n    logout() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this3.afAuth.signOut();\n          localStorage.clear();\n          _this3.isAdmin = false;\n          yield _this3.router.navigate(['/']);\n          _this3.toastr.success('Successfully logged out!');\n        } catch (error) {\n          _this3.toastr.error('Error');\n        }\n      })();\n    }\n    resetPassword(email) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this4.afAuth.sendPasswordResetEmail(email);\n          yield _this4.router.navigate(['login']);\n          _this4.toastr.success('Reset password email sent!');\n        } catch (error) {\n          _this4.toastr.error('Error');\n        }\n      })();\n    }\n    get isLoggedIn() {\n      const user = JSON.parse(localStorage.getItem('user'));\n      return user !== null;\n    }\n    get activeUser() {\n      return JSON.parse(localStorage.getItem('user'));\n    }\n    get checkAuthorization() {\n      if (!this.user) {\n        return false;\n      }\n      return !!this.activeUser.isAuthenticated().isAdmin();\n    }\n    getById(id) {\n      return this.http.get(`${baseUrl}/${id}/.json`);\n    }\n    getToken() {\n      firebase.auth().currentUser.getIdToken().then(token => {\n        this.token = token;\n      });\n      return this.token;\n    }\n    isAuthenticated() {\n      return this.token != null;\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService), i0.ɵɵinject(i4.HttpClient), i0.ɵɵinject(i5.AngularFirestore));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}