{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CoreModule } from './core/core.module';\nimport { environment } from '../environments/environment';\nimport { AuthModule } from './auth/auth.module';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, CoreModule, AppRoutingModule, RouterModule, AngularFireModule.initializeApp(environment.firebase), AngularFirestoreModule,\n  // firestore\n  AngularFireAuthModule,\n  // auth\n  AngularFireStorageModule,\n  // storage\n  FormsModule, ReactiveFormsModule, ToastrModule.forRoot({\n    timeOut: 10000,\n    positionClass: 'toast-bottom-right',\n    preventDuplicates: true\n  }), AuthModule, TranslateModule.forRoot({\n    loader: {\n      provide: TranslateLoader,\n      useFactory: translateLoaderFactory,\n      deps: [HttpClient]\n    }\n  })],\n  providers: [provideHttpClient(withInterceptorsFromDi())]\n})], AppModule);\nexport { AppModule };\nexport function translateLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}